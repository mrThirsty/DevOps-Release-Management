// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReleaseManagement.Framework.Data;

namespace ReleaseManagement.Framework.Migrations
{
    [DbContext(typeof(ReleaseDataContext))]
    [Migration("20210513093255_SysSettings")]
    partial class SysSettings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.AuditHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditHeader");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.AuditItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuditHeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuditHeaderId");

                    b.ToTable("AuditItem");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ComponentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComponentTypeId1")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComponentTypeId");

                    b.HasIndex("ComponentTypeId1");

                    b.ToTable("Component");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.ComponentApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("TEXT");

                    b.Property<int>("ComponentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComponentId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReleaseId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ComponentId1");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("ReleaseId1");

                    b.ToTable("ComponentApproval");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.ComponentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComponentType");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Exception")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Release", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReleaseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Release");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemSetting");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.AuditItem", b =>
                {
                    b.HasOne("ReleaseManagement.Framework.Data.Model.AuditHeader", "AuditHeader")
                        .WithMany("AuditItems")
                        .HasForeignKey("AuditHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditHeader");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Component", b =>
                {
                    b.HasOne("ReleaseManagement.Framework.Data.Model.ComponentType", "ComponentType")
                        .WithMany()
                        .HasForeignKey("ComponentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReleaseManagement.Framework.Data.Model.ComponentType", null)
                        .WithMany("Components")
                        .HasForeignKey("ComponentTypeId1");

                    b.Navigation("ComponentType");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.ComponentApproval", b =>
                {
                    b.HasOne("ReleaseManagement.Framework.Data.Model.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReleaseManagement.Framework.Data.Model.Component", null)
                        .WithMany("ComponentApprovals")
                        .HasForeignKey("ComponentId1");

                    b.HasOne("ReleaseManagement.Framework.Data.Model.Release", "Release")
                        .WithMany()
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReleaseManagement.Framework.Data.Model.Release", null)
                        .WithMany("ComponentApprovals")
                        .HasForeignKey("ReleaseId1");

                    b.Navigation("Component");

                    b.Navigation("Release");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.AuditHeader", b =>
                {
                    b.Navigation("AuditItems");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Component", b =>
                {
                    b.Navigation("ComponentApprovals");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.ComponentType", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("ReleaseManagement.Framework.Data.Model.Release", b =>
                {
                    b.Navigation("ComponentApprovals");
                });
#pragma warning restore 612, 618
        }
    }
}
